join_unga_decision = {

	is_shown = {
		NOT = { has_modifier = unga_member }
	}

	possible = {
		
		#THIS is not at war
		is_at_war = no
	
		#Diplomatic conditions for joining UN
		OR = {
		
			#THIS will join the UNGA UNLESS vetoed by the UNSC permanent members
			custom_tooltip = {
				text = join_unga_decision.tt
				NOT = {
					any_country = {
						has_modifier = unsc_permanent_member
						relations:root <= relations_threshold:cold
					}
				}
			}
			
			#THIS has greater prestige than all UNSC perm members
			custom_tooltip = {
				text = join_unga_decision_2.tt
				NOT = {
					any_country = {
						has_modifier = unsc_permanent_member
						country_rank > root.country_rank
					}
				}
			}
			
			#Cold War is over
			NOT = { cold_war_ongoing = yes }
			
		}
		
		#THIS has enough autonomy to join the UNGA
		is_sufficiently_independent = yes
		
		#THIS must not be a revolutionary
		is_revolutionary = no
		
		#THIS is not a pariah
		infamy < infamy_threshold:pariah
		
		### Special Conditions ###
		
		#One China Policy
		custom_tooltip = {
			text = join_unga_decision_4.tt
			
			NAND = { 
				exists = c:ROC
				c:PRC ?= this
				c:ROC ?= { is_country_type = recognized }
			}
			NAND = { 
				exists = c:PRC
				c:ROC ?= this
				c:PRC ?= { is_country_type = recognized }
			}
			
		}
		
		custom_tooltip = {
			text = join_unga_decision_3.tt
		
			#Divided Germany
			NAND = { 
				c:WGR ?= this
				cold_war_ongoing = yes
				game_date < 1973.9.18
			}
			NAND = { 
				c:EGR ?= this
				cold_war_ongoing = yes
				game_date < 1973.9.18
			}
			
			#Divided Korea
			NAND = { 
				c:SKO ?= this
				cold_war_ongoing = yes
				game_date < 1991.9.17
			}
			NAND = { 
				c:NKO ?= this
				cold_war_ongoing = yes
				game_date < 1991.9.17
			}
		
		}
		
	}
	
	when_taken = {
	
		#THIS joins the UNGA
		add_modifier = { name = unga_member }
		set_country_type = recognized
		
	}

	ai_chance = {
		base = 100		
	}
	
}

join_unsc_perm_decision = {

	is_shown = {
		NOT = { has_modifier = unsc_permanent_member }
		has_modifier = unga_member
	}

	possible = {
	
		has_technology_researched = tech_geopolitics_4
	
		#Is in the UN
		has_modifier = unga_member
		
		#Is currently in the UNSC but not a permanent member
		NOT = { has_modifier = unsc_permanent_member }
		has_modifier = unsc_non_permanent_member
		
		is_at_war = no
	
		#THIS must either be a Superpower or a GP
		OR = { 
			country_rank = rank_value:super_power
			country_rank = rank_value:great_power
		}
		
		#No UNSC member is angry with THIS
		custom_tooltip = {
			text = join_unsc_perm_decision_tt
			NOT = {
				any_country = {
					OR = { 
						has_modifier = unsc_permanent_member 
						has_modifier = unsc_non_permanent_member
					}
					relations:root < relations_threshold:friendly
				}
			}
		}
		
		#THIS has enough autonomy to join the UNSC
		NOR = {
			is_subject_type = subject_type_puppet
			is_subject_type = subject_type_special_administrative_region
			is_subject_type = subject_type_semi_autonomous_colony
			is_subject_type = subject_type_mandate
		}
		
		#THIS must not be a revolutionary
		is_revolutionary = no
		
		#THIS is not a pariah
		infamy < infamy_threshold:infamous
		
	}
	
	when_taken = {
	
		#THIS joins the UNSC as a permanent member
		add_modifier = { name = unsc_permanent_member }
		remove_modifier = unsc_non_permanent_member
		
		#Mark as new member
		set_variable = { 
			name = new_unsc_member_flag
			months = 1 
		}
		
		#Indicate which countries are Perm UNSC members
		custom_tooltip = {
			text = UNSC_members_list.tt
		}
		
		#Notify fellow UNSC perm members of new member
		every_country = {
			limit = { has_modifier = unsc_permanent_member }
			trigger_event = { id = united_nations.28 }
		}
		
	}

	ai_chance = {
		base = 50		
	}
	
}

request_un_peacekeeping_decision = {

	is_shown = {
		has_modifier = unga_member
		
		#THIS is part of a diplomatic play
		is_diplomatic_play_committed_participant = yes
		
		#THIS is not an aggressor (ie. the one who started it) in a diplomatic play
		is_diplomatic_play_initiator = no
		
		#Has not already fired this decision
		NOT = { has_variable = un_peacekeeping_applicant_var }
		
		#Cannot trigger resolution too frequently
		NOT = { has_variable = un_peackeeping_timer }
		
		#Aggressor has not already faced a successful UN vote
		NOT = { 
			any_country = {
				is_diplomatic_play_enemy_of = ROOT
				is_diplomatic_play_initiator = yes
				has_war_with = ROOT
				has_variable = un_peacekeeping_resolution_passed
			}
		}
	}

	possible = {
		
		#UN is not pre-occupied with any other peacekeeping requests
		NOT = { 
			any_country = { 
				exists = yes 
				has_variable = un_peacekeeping_applicant_var 
			} 
		}
		
		#War must have already started
		is_at_war = yes
		
		#Aggressor is not revolutionary
		any_country = {
			is_revolutionary = no
			is_diplomatic_play_enemy_of = ROOT
		}
		
		#THIS is not a pariah
		infamy < infamy_threshold:pariah
		
		#THIS must not be a revolutionary
		is_revolutionary = no
		
		#Ruler is not jingoistic
		ruler = {
			NOR = {
				has_ideology = ideology:ideology_autocratic
				has_ideology = ideology:ideology_power_hungry
				has_ideology = ideology:ideology_elitist
			}
		}
		
	}
	
	when_taken = {
	
		#THIS applies for UN peacekeeping (resolution expires in 1 year)
		set_variable = {
			name = un_peacekeeping_applicant_var
			months = 12
		}
		
		#Create global variable for vote
		set_global_variable = { name = unsc_peackeeping_vote_count_var value = 0 }
		set_global_variable = { name = unga_peackeeping_vote_count_var value = 0 }
		
		#Round 1 voting (1 month of voting time)
		add_modifier = { name = un_peacekeeping_unsc_stage_var days = 30 }
		
		#Send out vote choice event to UNSC members
		every_country = {
			limit = {
				exists = yes
				NOT = { THIS = ROOT }
				OR = { 
					has_modifier = unsc_non_permanent_member 
					has_modifier = unsc_permanent_member 
				}
			}
			trigger_event = { id = united_nations.6 }
			add_journal_entry = { type = je_un_peacekeeping_system }
		}
		add_journal_entry = { type = je_un_peacekeeping_system }
		
		#Timer
		set_variable = { name = un_peackeeping_timer months = 12 }
		
	}

	ai_chance = {
		base = 1
	}
	
}

request_imf_loan_decision = {

	is_shown = {
	
		#THIS is a member of the UN
		has_modifier = unga_member
		
		#THIS has not already taken out a loan
		NOT = { has_modifier = imf_loan_debtor }
		
		#Is irretrievably insolvent OR is bordering on insolvency OR is a weak wartime economy
		OR = { 
		
			#is_player = yes
		
			AND = { 
				in_default = yes
				has_healthy_economy = no
			}
			
			AND = { 
				has_healthy_economy = no
				is_at_war = yes
			}
			
		}
		
		#Government is willing to get help from capitalist creditors
		NOT = { is_a_communist_government = yes }
		
		#THIS has not recently called for a loan
		NOT = { has_variable = imf_loan_timer }
		
		#UN can only take 1 request at a time
		NOT = { any_country = { has_variable = imf_loan_applicant } }
		
	}

	possible = {
	
		#Not in an election campaign
		in_election_campaign = no
		
		#THIS is not a pariah
		infamy < infamy_threshold:pariah
		
		#There is a higher ranked country willing to lend & is not already lending
		any_country = {
			has_modifier = unga_member
			
			NOT = { is_a_communist_government = yes }
			
			has_healthy_economy = yes
			in_default = no
			
			NOT = { has_diplomatic_pact = { who = ROOT type = bankroll is_initiator = yes } }
			
			country_rank > root.country_rank
			
			relations:root >= relations_threshold:amicable
		}
		
	}
	
	when_taken = {
	
		#Mark THIS as the potential debtor
		set_variable = { name = imf_loan_applicant months = 6 }
		
		#Get some baseline IMF support
		add_modifier = { name = imf_loan_debtor months = 60 }
	
		#Send out invitation to bankroll THIS
		every_country = {
			limit = { 
				has_modifier = unga_member
				NOT = { is_a_communist_government = yes }
				has_healthy_economy = yes
				in_default = no
				NOT = { has_diplomatic_pact = { who = ROOT type = bankroll is_initiator = yes } }
				country_rank > root.country_rank
				relations:root >= relations_threshold:amicable
			}
			trigger_event = { id = united_nations.19 }
		}
	
		#Timer
		set_variable = { name = imf_loan_timer months = 12 }
		
	}

	ai_chance = {
		base = 100		
	}
	
}