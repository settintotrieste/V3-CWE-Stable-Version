calculate_nuclear_strength_info = {
	
	#Always first reset to 0
	set_variable = { 
		name = nuclear_strike_power_display
		value = 0
	}

	#Create total score from all working buildings (max score: 10/state)
	
	#Nuclear weapons type
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_type_1 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 1 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_type_2 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 2 } }
	}
	
	#Stockpile
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_1 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 1 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_2 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 2 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_3 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 3 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_4 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 4 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_5 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 5 } }
	}
	
	#Nuclear bomber
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_bomber_1 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 1 } }
	}
	
	#Nuclear rocket
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_rocket_1 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 1 } }
	}

	#Nuclear submarine
	every_scope_state = {
		limit = { has_building = building_nuclear_naval_base any_scope_building = { has_active_production_method = pm_nuclear_submarine_1 } }
		owner = { change_variable = { name = nuclear_strike_power_display add = 1 } }
	}
	
	#Reduce nuclear power due to nuclear disarmament treaty
	if = {
		limit = { 
			OR = { 
				any_scope_diplomatic_pact = { is_diplomatic_action_type = nuclear_de_escalation_treaty }
				has_modifier = recently_reduced_nukes
			}
		}
		change_variable = { name = nuclear_strike_power_display divide = 2 }
	}

}

calculate_nuclear_defence_info = {

	#Always first reset to 0
	set_variable = { 
		name = nuclear_strike_defence_display
		value = 0
	}

	#Calculate total number of states
	every_scope_state = { 
		owner = { change_variable = { name = nuclear_strike_defence_display add = 1 } }
	}

	#Reduce defence due to nuclear weapons stationed next to THIS
	every_country = {
		limit = { 
			has_strategic_adjacency = ROOT
			OR = { 
				has_modifier = nuclear_capability 
				any_scope_diplomatic_pact = { is_diplomatic_action_type = station_nuclear_weapons } 
			}
			relations:root < relations_threshold:neutral
		}
		ROOT = { change_variable = { name = nuclear_strike_defence_display multiply = 0.9 } }
	}

}

calculate_enemy_nuclear_strength_info = {
	
	#Always first reset to 0
	set_variable = { 
		name = nuclear_strike_power_enemy_display
		value = 0
	}
	set_variable = { 
		name = nuclear_strike_defence_enemy_display
		value = 0
	}

	#Calculate enemy nuclear strength
	every_country = {
		limit = { 
			has_modifier = nuclear_capability 
			
			has_variable = nuclear_strike_power_display
			has_variable = nuclear_strike_defence_display
			
			relations:root < relations_threshold:neutral
		}
		calculate_nuclear_strength_info = yes
		calculate_nuclear_defence_info = yes
		
		set_global_variable = {
			name = nuclear_strike_power_enemy_display_global
			value = this.var:nuclear_strike_power_display
		}
		set_global_variable = {
			name = nuclear_strike_defence_display_global
			value = this.var:nuclear_strike_defence_display
		}
		
		ROOT = {
			change_variable = {
				name = nuclear_strike_power_enemy_display
				add = global_var:nuclear_strike_power_enemy_display_global
			}
			change_variable = {
				name = nuclear_strike_defence_enemy_display
				add = global_var:nuclear_strike_defence_display_global
			}
		}
		
		remove_global_variable = nuclear_strike_power_enemy_display_global
		remove_global_variable = nuclear_strike_defence_display_global
		
	}
	
}

calculate_nuclear_arms_race_ratio = {
	
	#THIS vs Enemy ratio
	set_variable = { 
		name = nuclear_strike_power_THIS_enemy_ratio
		value = root.var:nuclear_strike_power_display
	}
	if = {
		limit = { root.var:nuclear_strike_defence_enemy_display > 0 }
		change_variable = {
			name = nuclear_strike_power_THIS_enemy_ratio
			divide = root.var:nuclear_strike_defence_enemy_display
		}
	}
	else = {
		set_variable = { 
			name = nuclear_strike_power_THIS_enemy_ratio
			value = 0
		}
	}
	
	#Enemy vs THIS ratio
	set_variable = { 
		name = nuclear_strike_power_enemy_THIS_ratio
		value = root.var:nuclear_strike_power_enemy_display
	}
	if = {
		limit = { root.var:nuclear_strike_defence_display > 0 }
		change_variable = {
			name = nuclear_strike_power_enemy_THIS_ratio
			divide = root.var:nuclear_strike_defence_display
		}
	}
	else = {
		set_variable = { 
			name = nuclear_strike_power_enemy_THIS_ratio
			value = 0
		}
	}
	
	#Aggregate
	set_variable = { 
		name = nuclear_strike_power_ratio
		value = root.var:nuclear_strike_power_THIS_enemy_ratio
	}
	change_variable = { 
		name = nuclear_strike_power_ratio
		subtract = root.var:nuclear_strike_power_enemy_THIS_ratio
	}
	if = {
		limit = { root.var:nuclear_strike_power_THIS_enemy_ratio >= root.var:nuclear_strike_power_enemy_THIS_ratio }
		change_variable = { 
			name = nuclear_strike_power_ratio
			divide = root.var:nuclear_strike_power_THIS_enemy_ratio
		}
	}
	if = {
		limit = { root.var:nuclear_strike_power_THIS_enemy_ratio < root.var:nuclear_strike_power_enemy_THIS_ratio }
		change_variable = { 
			name = nuclear_strike_power_ratio
			divide = root.var:nuclear_strike_power_enemy_THIS_ratio
		}
	}
	change_variable = { 
		name = nuclear_strike_power_ratio
		multiply = 100
	}

}