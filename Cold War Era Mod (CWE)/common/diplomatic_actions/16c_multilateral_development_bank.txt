multilateral_development_bank = {
	requires_approval = yes
	should_notify_third_parties = no

	unlocking_technologies = {
		tech_economy_4
	}
	
	potential = {
	
		#THIS is not decentralized
		NOT = { is_country_type = decentralized }
		scope:target_country = { NOT = { is_country_type = decentralized } }
		
		#Not a revolutionary state
		is_revolutionary = no
		scope:target_country = { is_revolutionary = no }
		
		#THIS is not a subject
		is_sufficiently_independent = yes
		scope:target_country = { is_sufficiently_independent = yes }
		
		#THIS is not at war with TARGET
		NOT = { has_war_with = scope:target_country }
		
		#THIS has a higher rank than TARGET
		scope:target_country = { country_rank <= root.country_rank }
		
		#THIS has a stronger economy than TARGET
		root.gdp > scope:target_country.gdp
		
	}
	
	possible = {
	
		#THIS is interested in the TARGET
		has_diplomatic_relevance = scope:target_country
		
		#THIS has a healthy economy
		in_default = no
		OR = { 
			has_healthy_economy = yes
			gold_reserves > 0
		}
		
		#THIS has good relations with the TARGET
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER
			scope:target_country.relations:root >= relations_threshold:cordial
		}
		
		#Investment pool is of sufficient size
		
		
		#Correct economic system
		NOT = { has_law = law_type:law_isolationism }
		scope:target_country = { NOT = { has_law = law_type:law_isolationism } }
		
		#THIS is interested in multilateral institutions
		OR = { 
			has_law = law_type:law_regionalist_fp
			has_law = law_type:law_globalist_fp
		}
		
		#THIS has sufficient money in the investment pool (100 mil)
		OR = { 
			AND = { country_has_an_investment_pool = yes investment_pool > 100000000 }
			AND = { NOT = { country_has_an_investment_pool = yes } gold_reserves > 100000000 }
		}
		
	}
	
	pact = {	
		cost = 10
	
		is_two_sided_pact = yes
		
		#Membership fee (TARGET pays to THIS)
		income_transfer = 0.01
		recipient_gets_income_transfer = no
		income_transfer_based_on_recipient = yes
		
		break_effect = {
			scope:target_country = { change_relations = { country = scope:actor value = -25 } }
		}
		
		should_auto_break = {
		
			OR = { 
			
				#THIS has poor relations with TARGET
				has_war_with = scope:target_country
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS
					scope:target_country.relations:root <= relations_threshold:poor
				}
				
				#THIS or TARGET has the wrong economic system
				has_law = law_type:law_isolationism
				scope:target_country = { has_law = law_type:law_isolationism }
				
				#THIS does not have sufficient money in the investment pool (100 mil)
				NOR = { 
					AND = { country_has_an_investment_pool = yes investment_pool > 90000000 }
					AND = { NOT = { country_has_an_investment_pool = yes } gold_reserves > 90000000 }
				}
				
			}
			
		}		
	
		should_invalidate = {
		
			#THIS is in default or is no longer sufficiently independent
			OR = {
			
				in_default = yes
				
				NAND = { 
					is_sufficiently_independent = yes
					scope:target_country = { is_sufficiently_independent = yes }
				}
				
			}
			
		}
		
		monthly_effect = {
			
			save_scope_as = initiator_investment_pool
			scope:target_country = { save_scope_as = recipient_investment_pool }
			
			#Transfer investment pool money from THIS to TARGET (100K per incorporated state)
			if = {
				limit = { 
					country_has_an_investment_pool = yes 
					scope:target_country = { country_has_an_investment_pool = yes }
				}
				custom_tooltip = {
					text = multilateral_development_bank_1.tt
					scope:target_country = { 
						every_scope_state = {
							limit = { 
								is_incorporated = yes 
							}
							owner = { 
								if = {
									limit = { scope:actor = { investment_pool > 100000000 } }
									scope:target_country = { add_investment_pool = 100000 }
									scope:actor = { add_investment_pool = -100000 }
								}
							}
						}
					}
				}
			}
			if = {
				limit = { 
					country_has_an_investment_pool = yes 
					scope:target_country = { NOT = { country_has_an_investment_pool = yes } }
				}
				custom_tooltip = {
					text = multilateral_development_bank_2.tt
					scope:target_country = { 
						every_scope_state = {
							limit = { 
								is_incorporated = yes 
							}
							owner = { 
								if = {
									limit = { scope:actor = { investment_pool > 100000000 } scope:target_country = { gold_reserves < gold_reserves_limit } }
									scope:target_country = { add_treasury = 100000 }
									scope:actor = { add_investment_pool = -100000 }
								}
							}
						}
					}
				}
			}
			if = {
				limit = { 
					NOT = { country_has_an_investment_pool = yes }
					scope:target_country = { country_has_an_investment_pool = yes }
				}
				custom_tooltip = {
					text = multilateral_development_bank_3.tt
					scope:target_country = { 
						every_scope_state = {
							limit = { 
								is_incorporated = yes 
							}
							owner = { 
								if = {
									limit = { scope:actor = { gold_reserves > 100000000 } }
									scope:target_country = { add_investment_pool = 100000 }
									scope:actor = { add_treasury = -100000 }
								}
							}
						}
					}
				}
			}
			if = {
				limit = { 
					NOT = { country_has_an_investment_pool = yes }
					scope:target_country = { NOT = { country_has_an_investment_pool = yes } }
				}
				custom_tooltip = {
					text = multilateral_development_bank_4.tt
					scope:target_country = { 
						every_scope_state = {
							limit = { 
								is_incorporated = yes 
							}
							owner = { 
								if = {
									limit = { scope:actor = { gold_reserves > 100000000 } scope:target_country = { gold_reserves < gold_reserves_limit } }
									scope:target_country = { add_treasury = 100000 }
									scope:actor = { add_treasury = -100000 }
								}
							}
						}
					}
				}
			}
			
		} 

	}
	
	accept_effect = {
		
		scope:target_country = { change_relations = { country = scope:actor value = 25 } }
		
	}
	
	decline_effect = {
		
		scope:target_country = { change_relations = { country = scope:actor value = -25 } }
		
	}
	
	ai = {
	
		propose_score = {
			value = 10
		}
		
		check_acceptance_for_will_propose = yes
	
		will_propose = { 
			scaled_debt <= 0
		}
		
		accept_score = {
			value = 0
			
			if = {
				limit = { 
					OR = {
						AND = { scope:actor = { is_a_communist_government = yes } scope:target_country = { NOT = { is_a_communist_government = yes } } }
						AND = { scope:actor = { is_a_nationalist_government = yes } scope:target_country = { NOT = { is_a_nationalist_government = yes } } }
						AND = { scope:actor = { is_a_theocratic_government = yes } scope:target_country = { NOT = { is_a_theocratic_government = yes } } }
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_BASE"
					value = -100
				}
			}
			
			if = {
				limit = { 
					"scope:actor.num_mutual_trade_route_levels_with_country(root)" < 1
				}
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NO_MUTUAL_TRADE_ROUTES"
					value = -50
				}				
			}
			else = {
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
					value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
					multiply = 2
					max = 75
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				multiply = 2
				min = -10
				max = 10
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					max = 10
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					min = -10
				}					
			}							
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 50
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"								
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 0
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 35
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}
			
		}
		
		check_acceptance_for_will_break = yes
		
		propose_break_score = {
			value = 10
		}
		
	}
	
}