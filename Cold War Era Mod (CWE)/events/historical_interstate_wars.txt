namespace = historical_interstate_wars

### Korean War ###

historical_interstate_wars.1 = {
    type = country_event

    title = korean_war.t 								# Title of the event; ADD LOCALISATION
    desc = korean_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = korean_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:NKO this = c:NKO											# Change TAG of the overlord ****
		game_date >= 1950.3.25									# START DATE: Date colony became self governing ****
		game_date < 1960.6.25									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		can_go_to_war = yes										# No legal or political restrictions on going to war
		
		#Recipent conditions
		c:SKO = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_at_war = no
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = korean_war_hiw }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = korean_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Korean War
		create_diplomatic_play = {
			name = korean_war
			type = dp_annex_war_historical
			target_country = c:SKO
			
			#war = yes
			
			#Removed until PRC can intervene to save NKO
			add_war_goal = {
				holder = c:SKO
				type = annex_country
				target_country = c:NKO
			}
			
		}
		
		# Fire only once
		set_variable = korean_war_hiw							# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		every_scope_state = {
			add_radicals = {
				value = small_radicals
			}
		}
		
		# Fire only once
		set_variable = korean_war_hiw							# Change variable ****
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

### Tibet War ###

historical_interstate_wars.2 = {
    type = country_event

    title = sino_tibetan_war.t 								# Title of the event; ADD LOCALISATION
    desc = sino_tibetan_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = sino_tibetan_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:PRC
		this = c:PRC											# Change TAG of the overlord ****
		game_date >= 1950.7.6									# START DATE: Date colony became self governing ****
		game_date < 1960.7.6									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		can_go_to_war = yes										# No legal or political restrictions on going to war
		
		#Recipent conditions
		c:TIB = { 												# Change TAG of the transferee ****
			exists = yes
			NOT = { is_a_communist_government = yes }
			is_at_war = no
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = sino_tibetan_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = sino_tibetan_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Korean War
		
		create_diplomatic_play = {
			name = sino_tibetan_war
			type = dp_annex_war_historical
			target_country = c:TIB
			
			#war = yes
			
			add_war_goal = {
				holder = c:TIB
				type = humiliation
				target_country = c:PRC
			}
		}
		
		# Fire only once
		set_variable = sino_tibetan_war_hiw						# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		every_scope_state = {
			add_radicals = {
				value = small_radicals
			}
		}
		
		# Fire only once
		set_variable = sino_tibetan_war_hiw						# Change variable ****
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

### Annexation of Goa ###

historical_interstate_wars.3 = {
    type = country_event

    title = portugal_india_war.t 							# Title of the event; ADD LOCALISATION
    desc = portugal_india_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = portugal_india_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:HND
		this = c:HND											# Change TAG of the overlord ****
		game_date >= 1961.12.17									# START DATE: Date colony became self governing ****
		game_date < 1971.12.17									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		c:POR = { 												# Change TAG of the transferee ****
			exists = yes
			is_at_war = no
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_BOMBAY
		}
		
		# Event has not been fired before
		NOT = { has_variable = portugal_india_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = portugal_india_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Option for war
		c:POR = { trigger_event = { id = historical_interstate_wars.4 } }
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#FROM is happy!
		change_relations = {
			country = c:POR
			value = 25
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		#Minor discontent
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals = {
					value = small_radicals
				}
			}
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

historical_interstate_wars.4 = {
    type = country_event

    title = portugal_india_war.t 							# Title of the event; ADD LOCALISATION
    desc = portugal_india_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = portugal_india_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Transfer territories
		s:STATE_BOMBAY.region_state:POR = { set_state_owner = c:HND }
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#Trigger war
		c:HND = {
			create_diplomatic_play = {
				name = portugal_india_war
				type = dp_take_treaty_port
				target_state = s:STATE_BOMBAY.region_state:POR
			
				#war = yes

				add_war_goal = {
					holder = c:POR
					type = humiliation
					target_country = c:HND
				}
			}
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

### Suez Crisis ###

historical_interstate_wars.5 = {
    type = country_event

    title = suez_crisis_war.t 								# Title of the event; ADD LOCALISATION
    desc = suez_crisis_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = suez_crisis_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:EGY
		this = c:EGY											# Change TAG of the overlord ****
		game_date >= 1956.7.26									# START DATE: Date colony became self governing ****
		game_date < 1966.7.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		can_go_to_war = yes										# No legal or political restrictions on going to war
		
		left_wing_ruling_coalition = yes						# Correct ruling coalition ****
		
		#Recipent conditions
		c:GBR = { 												# Change TAG of the transferee ****
			exists = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_SINAI
		}
		#Recipent conditions
		c:FRA = { 												# Change TAG of the transferee ****
			exists = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_SINAI
		}
		
		# Event has not been fired before
		NOT = { has_variable = suez_crisis_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = suez_crisis_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Option for war
		c:GBR = { trigger_event = { id = historical_interstate_wars.6 } }
		c:FRA = { trigger_event = { id = historical_interstate_wars.6 } }
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#FROM is happy!
		change_relations = {
			country = c:GBR
			value = 25
		}
		change_relations = {
			country = c:FRA
			value = 25
		}
		
		#Minor discontent
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals = {
					value = small_radicals
				}
			}
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

historical_interstate_wars.6 = {
    type = country_event

    title = suez_crisis_war.t 							# Title of the event; ADD LOCALISATION
    desc = suez_crisis_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = suez_crisis_war.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
	
	immediate = {
		save_scope_as = suez_canal_owner
		
		random_scope_state = {
			limit = { state_region = s:STATE_SINAI }
			save_scope_as = suez_canal_state
		}
	}
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Transfer territories
		random_scope_state = {
			limit = { state_region = s:STATE_SINAI }
			set_state_owner = c:EGY
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#International superpower support for Egypt
		random_country = {
			limit = { 
				this ?= c:SOV 
				is_a_communist_government = yes 
				is_a_superpower = yes 
			}
			change_relations = {
				country = c:EGY
				value = 100
			}
			change_relations = {
				country = c:ROOT
				value = -100
			}
		}
		random_country = {
			limit = { 
				this ?= c:USA
				is_a_democracy = yes 
				is_a_superpower = yes 
			}
			change_relations = {
				country = c:EGY
				value = 100
			}
			change_relations = {
				country = c:ROOT
				value = -50
			}
		}
		random_country = {
			limit = { 
				this ?= c:ISR
				is_a_democracy = yes
			}
			change_relations = {
				country = ROOT
				value = 100
			}
		}
		
		#Trigger war
		c:EGY = {
			create_diplomatic_play = {
				name = suez_crisis_war
				type = dp_take_treaty_port
				target_state = scope:suez_canal_state
			
				#war = yes

				add_war_goal = {
					holder = scope:suez_canal_owner
					type = humiliation
					target_country = c:EGY
				}
			}
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

### Vietnam War ###

historical_interstate_wars.7 = {
    type = country_event

    title = vietnam_war.t 								# Title of the event; ADD LOCALISATION
    desc = vietnam_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = vietnam_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:NVM
		this = c:NVM											# Change TAG of the overlord ****
		game_date >= 1965.3.8									# START DATE: Date colony became self governing ****
		game_date < 1975.3.8									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		can_go_to_war = yes										# No legal or political restrictions on going to war
		
		#Recipent conditions
		c:SVM = { 												# Change TAG of the transferee ****
			exists = yes
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = vietnam_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = vietnam_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Vietnam War
		create_diplomatic_play = {
			name = vietnam_war
			type = dp_annex_war_historical
			target_country = c:SVM
			
			#war = yes
			
			add_war_goal = {
				holder = c:SVM
				type = annex_country
				target_country = c:NVM
			}
			
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals = {
					value = small_radicals
				}
			}
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

### Second Indo-Pakistan War ###

historical_interstate_wars.8 = {
    type = country_event

    title = second_indo_pakistan_war.t 								# Title of the event; ADD LOCALISATION
    desc = second_indo_pakistan_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = second_indo_pakistan_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:PAK
		this = c:PAK											# Change TAG of the overlord ****
		game_date >= 1965.1.8									# START DATE: Date colony became self governing ****
		game_date < 1975.1.8									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		c:HND = { 												# Change TAG of the transferee ****
			exists = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_KASHMIR
		}
		
		# Event has not been fired before
		NOT = { has_variable = second_indo_pakistan_war_hiw }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = second_indo_pakistan_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# War
		create_diplomatic_play = {
			name = second_indo_pakistan_war
			type = dp_return_state_historical
			target_state = s:STATE_KASHMIR.region_state:HND
			
			#war = yes

			add_war_goal = {
				holder = c:HND
				type = humiliation
				target_country = c:PAK
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals = {
					value = small_radicals
				}
			}
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

### Falklands War ###

historical_interstate_wars.9 = {
    type = country_event

    title = falklands_war.t 							# Title of the event; ADD LOCALISATION
    desc = falklands_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = falklands_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:ARG
		this = c:ARG											# Change TAG of the overlord ****
		game_date >= 1982.1.2									# START DATE: Date colony became self governing ****
		game_date < 1992.1.2									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		c:GBR = { 												# Change TAG of the transferee ****
			exists = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_SOUTH_ATLANTIC_ISLANDS
		}
		
		# Event has not been fired before
		NOT = { has_variable = falklands_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = falklands_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# War
		create_diplomatic_play = {
			name = falklands_war
			type = dp_return_state_historical
			target_state = s:STATE_SOUTH_ATLANTIC_ISLANDS.region_state:GBR
			
			#war = yes

			add_war_goal = {
				holder = c:GBR
				type = humiliation
				target_country = c:ARG
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals = {
					value = small_radicals
				}
			}
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}

### Third Indo-Pakistan War ###

historical_interstate_wars.10 = {
    type = country_event

    title = third_indo_pakistan_war.t 							# Title of the event; ADD LOCALISATION
    desc = third_indo_pakistan_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = third_indo_pakistan_war.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/event_portrait.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:PAK
		this = c:PAK											# Change TAG of the overlord ****
		game_date >= 1971.9.3									# START DATE: Date colony became self governing ****
		game_date < 1981.12.3									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		has_state_in_state_region = STATE_SOUTH_BENGAL
		
		#Recipent conditions
		c:HND = { 												# Change TAG of the transferee ****
			exists = yes
			is_a_democracy = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_KASHMIR
		}
		
		# Event has not been fired before
		NOT = { has_variable = third_indo_pakistan_war_hiw }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = third_indo_pakistan_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# Release East Pakistan
		create_country = {
			tag = BNG										# Change TAG of country being released ****
			origin = ROOT									# TAG where the created country takes tech from
			state = s:STATE_SOUTH_BENGAL.region_state:PAK
			
			on_created = {									# Set government laws & rulers here
				
				# SET laws for colony ****
				effect_starting_politics_parliamentary_republic = yes
				effect_starting_politics_democratic = yes
				effect_starting_politics_constitutional_unitary_state = yes
				effect_starting_politics_war_policy_anti_military = yes
				effect_starting_politics_economic_policy_interventionism = yes
				effect_starting_politics_trade_policy_protectionism = yes
				effect_starting_politics_anti_nuclear_policy = yes
				
				# CREATE leader for colony ****
				create_character = {
					first_name = "guy_incognito_first_name"		# CHANGE
					last_name = "guy_incognito_last_name"		# CHANGE
					ruler = yes
					#birth_date = 1910.1.1						# CHANGE
					interest_group = ig_rural_folk				# CHANGE
					ideology = ideology_democratic				# CHANGE
					traits = {
						charismatic								# CHANGE
						persistent								# CHANGE
						meticulous								# CHANGE
					}
				}
				
				# Set diplomatic recognition
				set_country_type = unrecognized
			}
		}
		every_scope_state = {
			limit = {
		 		state_region = { is_homeland = cu:bengali }		# Change homeland identity to match colony to be released ****
		 	}
			set_state_owner = c:BNG								# Change TAG to colony ****
		}
		
		# War
		create_diplomatic_play = {
			name = third_indo_pakistan_war
			type = dp_return_state_historical
			target_state = s:STATE_KASHMIR.region_state:HND
			
			#war = yes

			add_war_goal = {
				holder = c:BNG
				type = independence
				target_country = c:PAK
			}
			add_war_goal = {
				holder = c:PAK
				type = annex_country
				target_country = c:BNG
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals = {
					value = small_radicals
				}
			}
		}
		
		ai_chance = { 
			base = 10 
		}
		
    }

}